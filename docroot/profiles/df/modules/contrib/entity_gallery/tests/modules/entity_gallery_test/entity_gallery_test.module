<?php

/**
 * @file
 * A dummy module for testing entity gallery related hooks.
 *
 * This is a dummy module that implements entity gallery related hooks to test
 * API interaction with the Entity Gallery module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\entity_gallery\EntityGalleryInterface;

/**
 * Implements hook_ENTITY_TYPE_presave() for entity gallery entities.
 */
function entity_gallery_test_entity_gallery_presave(EntityGalleryInterface $entity_gallery) {
  if ($entity_gallery->getTitle() == 'testing_entity_gallery_presave') {
    // Sun, 19 Nov 1978 05:00:00 GMT
    $entity_gallery->setCreatedTime(280299600);
    // Drupal 1.0 release.
    $entity_gallery->changed = 979534800;
  }
  // Determine changes.
  if (!empty($entity_gallery->original) && $entity_gallery->original->getTitle() == 'test_changes') {
    if ($entity_gallery->original->getTitle() != $entity_gallery->getTitle()) {
      $entity_gallery->title->value .= '_presave';
    }
  }
}

/**
 * Implements hook_ENTITY_TYPE_update() for entity gallery entities.
 */
function entity_gallery_test_entity_gallery_update(EntityGalleryInterface $entity_gallery) {
  // Determine changes on update.
  if (!empty($entity_gallery->original) && $entity_gallery->original->getTitle() == 'test_changes') {
    if ($entity_gallery->original->getTitle() != $entity_gallery->getTitle()) {
      $entity_gallery->title->value .= '_update';
    }
  }
}

/**
 * Implements hook_entity_view_mode_alter().
 */
function entity_gallery_test_entity_view_mode_alter(&$view_mode, EntityInterface $entity, $context) {
  // Only alter the view mode if we are on the test callback.
  $change_view_mode = \Drupal::state()->get( 'entity_gallery_test_change_view_mode') ?: '';
  if ($change_view_mode) {
    $view_mode = $change_view_mode;
  }
}

/**
 * Implements hook_ENTITY_TYPE_insert() for entity gallery entities.
 *
 * This tests saving an entity gallery on entity gallery insert.
 *
 * @see \Drupal\entity_gallery\Tests\EntityGallerySaveTest::testEntityGallerySaveOnInsert()
 */
function entity_gallery_test_entity_gallery_insert(EntityGalleryInterface $entity_gallery) {
  // Set the entity gallery title to the entity gallery ID and save.
  if ($entity_gallery->getTitle() == 'new') {
    $entity_gallery->setTitle('Entity Gallery '. $entity_gallery->id());
    $entity_gallery->setNewRevision(FALSE);
    $entity_gallery->save();
  }
}

/**
 * Implements hook_form_alter().
 */
function entity_gallery_test_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (!$form_state->get('entity_gallery_test_form_alter')) {
    drupal_set_message('Storage is not set');
    $form_state->set('entity_gallery_test_form_alter', TRUE);
  }
  else {
    drupal_set_message('Storage is set');
  }
}
