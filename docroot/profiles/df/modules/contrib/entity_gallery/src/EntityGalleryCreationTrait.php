<?php

namespace Drupal\entity_gallery;

use Drupal\entity_gallery\Entity\EntityGallery;

/**
 * Provides methods to create entity gallery based on default settings.
 *
 * This trait is meant to be used only by test classes.
 */
trait EntityGalleryCreationTrait {

  /**
   * Get an entity gallery from the database based on its title.
   *
   * @param string|\Drupal\Component\Render\MarkupInterface $title
   *   An entity gallery title, usually generated by $this->randomMachineName().
   * @param $reset
   *   (optional) Whether to reset the entity cache.
   *
   * @return \Drupal\entity_gallery\EntityGalleryInterface
   *   An entity gallery entity matching $title.
   */
  function getEntityGalleryByTitle($title, $reset = FALSE) {
    if ($reset) {
      \Drupal::entityTypeManager()->getStorage('entity_gallery')->resetCache();
    }
    // Cast MarkupInterface objects to string.
    $title = (string) $title;
    $entity_galleries = \Drupal::entityTypeManager()
      ->getStorage('entity_gallery')
      ->loadByProperties(['title' => $title]);
    // Load the first entity gallery returned from the database.
    $returned_entity_gallery = reset($entity_galleries);
    return $returned_entity_gallery;
  }

  /**
   * Creates an entity gallery based on default settings.
   *
   * @param array $settings
   *   (optional) An associative array of settings for the entity gallery, as
   *   used in entity_create(). Override the defaults by specifying the key and
   *   value in the array, for example:
   *   @code
   *     $this->drupalCreateEntityGallery(array(
   *       'title' => t('Hello, world!'),
   *       'type' => 'article',
   *     ));
   *   @endcode
   *   The following defaults are provided:
   *   - body: Random string using the default filter format:
   *     @code
   *       $settings['body'][0] = array(
   *         'value' => $this->randomMachineName(32),
   *         'format' => filter_default_format(),
   *       );
   *     @endcode
   *   - title: Random string.
   *   - type: 'page'.
   *   - uid: The currently logged in user, or anonymous.
   *
   * @return \Drupal\entity_gallery\EntityGalleryInterface
   *   The created entity gallery entity.
   */
  protected function createEntityGallery(array $settings = array()) {
    // Populate defaults array.
    $settings += array(
      'title'     => $this->randomMachineName(8),
      'type'      => 'page',
      'uid'       => \Drupal::currentUser()->id(),
    );

    $node = $this->drupalCreateNode(['type' => $settings['type']]);
    $settings['entity_gallery_node'] = [
      'target_id' => $node->id(),
    ];

    $entity_gallery = EntityGallery::create($settings);
    $entity_gallery->save();

    return $entity_gallery;
  }

}
